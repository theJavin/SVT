In this file do not use the equal sign in a comment because that is the triger to read an input.

Type of shape to run on 1 for circle and 2 for sphere. (int)
TypeOfShape = 2;

Number of divisions in a circle or divisions in each circle of a sphere. There will also be this many circles in each sphere. 
If you are working on a sphere the number needs to be even and greater than or equal to 4. (int) 
Divisions = 24;

The viscosity of the medium the nodes will be floating in. The units will be grams/milli-second. This just gives some resitance to movement. 
It will be scaled by dividing by the number of nodes. (float)
Viscosity = 25.0;

This will be the strength of the central push back force which will simulate blood pressure.
The units are grams*(Millisecons^2)/Millimeters.
We are assuming an average presure of 100 millimeterrs of mercury. 
100 millimeterrs of mercury is 13332.24 Pascals which is in kg/(meters*seconds*seconds).
Putting this into our units of grams, milliseconds, millimeters gives 0.01333224 
To get the force on the node we will need an area to multiply the pressure by.
We used a circle of half the average distance to all the connected nodes as the area.
You are losing some area so we divided the lost area perportionatly amount the nodes by (area of node)/(total area of sphere).
Not sure what to do with a circle because of 1D pressure?? This needs work. (float)
BloodPresure = 0.0933224;

This should be the mass of the atria we believe is about 50 grams. (float) 
MassOfAtria = 50.0;

The strength multiplier when the muscle is compressed past its disired compresion length. (float)
MuscleCompresionMultiplier = 50.0;

The strength multiplier when the muscle is stretched past its natural length. (float)
MuscleTentionMultiplier = 50.0;

The strength of a relaxed muscle. Probably zero but I gave it a little strength to help it return to its natural length. 
This will be multiplied by the muscle length to scale it. (float)
BaseMuscleRelaxedStrength = 0.1;

The strength of a contracting muscle. 
This will be multiplied by the muscle length to scale it. (float)
BaseContractionStrength = 0.2;

The fraction of a muscles natural length once it is contracted. 
We think it will lose 30% of its length so this should be 0.7. (float)
BaseMuscleCompresionStopFraction = 0.7;

The length of time a muscle is contracted. 
We think this should be around 100 milliseconds. (float)
BaseContractionDuration = 20.0;

The length of time a muscle must relaxed before it can contract again. 
We think this should be around 200 milliseconds. (float)
BaseRelaxationDuration = 40.0;

The speed of the action potential across a muscle. 
This will scaled by the muscle length to get the time it takes to cross a muscle.
We think this should be around 0.5 millimeters/milliseconds. (float)
BaseActionPotentialSpeed = 0.05;

The length of time between heart beats. 
A 1000 milliseconds is 60 beats per minute. (float)
BeatPeriod = 50.0;

How often you draw to the screen. How many iteration are run between draws.
DrawRate = 1000;

Your time step.
Dt = 0.001;
